#!/bin/bash

function _readlink(){
    c="$1"
    f="$( /usr/bin/basename "$c" )"
    if [ "$( /usr/bin/type -a "$c" 2> /dev/null| /usr/bin/head -1 )"x = x ]; then
        d="$( cd "$(/usr/bin/dirname "$c" )" || exit 1; /bin/pwd )"
    else
        p="$( /usr/bin/type -a "$c" | /usr/bin/head -1 | /usr/bin/awk '{$1="";$2=""; print $0}'| /usr/bin/sed 's/^[ \t]*//' )"
        d="$( /usr/bin/dirname "$p" )"
    fi
    if [ -L "${d}/${f}" ]; then
        cd "${d}" || exit 1
        r="$( /usr/bin/readlink -n "${d}/${f}" )"
        _readlink "$r"
    else
        echo "${d}/${f}"
    fi
}

fullpath_to_me="$( _readlink "$0" )"
pathtome="$(/usr/bin/dirname "$fullpath_to_me" )"
dockerapp=/Applications/Docker.app
dockerplist="/Library/LaunchDaemons/com.docker.vmnetd.plist"
macuser="$(stat -f %Su /dev/console)"

"${pathtome}/remove_quarantine" "$dockerapp"
/bin/chmod -R +a "$macuser allow list,add_file,search" "$dockerapp"
/bin/chmod -R +a "$macuser allow add_subdirectory,readattr,writeattr" "$dockerapp"
/bin/chmod -R +a "$macuser allow readextattr,writeextattr,readsecurity" "$dockerapp"

/bin/mkdir -p /usr/local/bin /Library/PrivilegedHelperTools
/bin/chmod 1755 /Library/PrivilegedHelperTools
dockerbindir="${dockerapp}/Contents/Resources/bin"

cd "$dockerbindir" || exit 1
for b in $( /bin/ls )
do
    /bin/ln -fs "${dockerbindir}/$b" "/usr/local/bin/$b"
done

dockervmnetd="${dockerapp}/Contents/Library/LaunchServices/com.docker.vmnetd"
if [ -f "$dockervmnetd" ]; then
    /bin/cp -af "$dockervmnetd" /Library/PrivilegedHelperTools/
fi

/bin/cat << _PLIST > "$dockerplist"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.docker.vmnetd</string>
    <key>Program</key>
    <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
    <key>ProgramArguments</key>
    <array>
        <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
    <key>Sockets</key>
    <dict>
        <key>Listener</key>
        <dict>
            <key>SockPathMode</key>
            <integer>438</integer>
            <key>SockPathName</key>
            <string>/var/run/com.docker.vmnetd.sock</string>
        </dict>
    </dict>
    <key>Version</key>
    <string>33</string>
</dict>
</plist>
_PLIST

/usr/bin/plutil -convert binary1 "$dockerplist"
/bin/chmod 644 "$dockerplist"
/usr/sbin/chown 0:0 "$dockerplist"

vmnetdStatus=$( /bin/launchctl list | /usr/bin/grep -c com.docker.vmnetd )
if [ "${vmnetdStatus:-0}" -ne 1 ]; then
    /bin/launchctl load -w /Library/LaunchDaemons/com.docker.vmnetd.plist
else
    /bin/launchctl stop /Library/LaunchDaemons/com.docker.vmnetd.plist
    /bin/launchctl start /Library/LaunchDaemons/com.docker.vmnetd.plist
fi
