#!/bin/bash
# MIT License
#
# Copyright (c) 2018 Takanori TANIGUCHI
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

dockerapp=/Applications/Docker.app
if [ -d "$dockerapp" ]; then
    /usr/bin/xattr -r -d com.apple.quarantine "$dockerapp" || exit 1
else
    echo "Not found Docker in /Applications." >&2
    echo "Abort!" >&2
    exit 1
fi
dockervmnetd="${dockerapp}/Contents/Library/LaunchServices/com.docker.vmnetd"
dockerplist="${dockerapp}/Contents/Resources/com.docker.vmnetd.plist"
plistfile="$( /usr/bin/basename "$dockerplist" )"

if [ -f "$dockerplist" ]; then
    /bin/cp -af "$dockerplist" /Library/LaunchDaemons/

    # Check if there is vmnetd version in plist. This is very important.
    dockervmnetd_ver="$( /usr/libexec/PlistBuddy -c "print Version" "/Library/LaunchDaemons/$plistfile" 2> /dev/null )"
    if [ -z "$dockervmnetd_ver" ]; then
       dockervmnetd_ver="$( /usr/libexec/PlistBuddy -c "print VmnetdVersion" "${dockerapp}/Contents/Info.plist" 2> /dev/null )"
        if [ -z "$dockervmnetd_ver" ]; then
            echo "Unknown Type of Docker!" >&2
            echo "Abort!" >&2
            exit 1
        fi
        /usr/libexec/PlistBuddy -c "add Version string $dockervmnetd_ver" "/Library/LaunchDaemons/$plistfile"
    else
        : Plist check passed.
    fi

    /bin/chmod 644 "/Library/LaunchDaemons/$plistfile"
    /usr/sbin/chown 0:0 "/Library/LaunchDaemons/$plistfile"
    /usr/bin/plutil -convert binary1 "/Library/LaunchDaemons/$plistfile"
else
    echo "Cancel to aboard. Not boarding pass($dockerplist) found." >&2
    exit 1
fi

/bin/mkdir -p /usr/local/bin /Library/PrivilegedHelperTools
if [ -f "$dockervmnetd" ]; then
    /bin/cp -af "$dockervmnetd" /Library/PrivilegedHelperTools/
fi

vmnetdStatus="$( /bin/launchctl list | /usr/bin/grep -c "$( /usr/bin/basename "$plistfile" .plist )" )"
if [ "${vmnetdStatus:-0}" -eq 0 ]; then
    /bin/launchctl load -w "/Library/LaunchDaemons/$plistfile"
else
    /bin/launchctl stop "/Library/LaunchDaemons/$plistfile"
    /bin/launchctl start "/Library/LaunchDaemons/$plistfile"
fi

exit $?
